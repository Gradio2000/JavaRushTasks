taskKey="com.javarush.task.task34.task3410.big11"\n\nSokoban (11)

Начнем наполнять функционалом класс модели Model. Добавь в него:
11.1. Поле GameObjects gameObjects. Оно будет хранить наши игровые объекты.
11.2. Поле отвечающее за текущий уровень int currentLevel. Проинициализируй его
значением 1.
11.3. Поле отвечающие за загрузчик уровней LevelLoader levelLoader.
Проинициализируй его с помощью файла levels.txt из папки res.
11.4. Метод GameObjects getGameObjects(), он должен возвращать все игровые
объекты.
11.5. Метод restartLevel(int level), он должен получать новые игровые объекты для
указанного уровня у загрузчика уровня levelLoader и сохранять их в поле gameObjects.
11.6. Метод restart(), он должен перезапускать текущий уровень, вызывая restartLevel
с нужным параметром.
11.7. Метод startNextLevel(), он должен увеличивать значение переменной
currentLevel, хранящей номер текущего уровня и выполнять перезапуск нового уровня.


Требования:
1.	Добавь в класс Model поле GameObjects gameObjects.
2.	Добавь в класс Model поле int currentLevel. Проинициализируй его значением 1.
3.	Добавь в класс Model поле LevelLoader levelLoader.
4.	Реализуй в классе Model метод GameObjects getGameObjects().
5.	Реализуй в классе Model метод restartLevel(int level).
6.	Реализуй в классе Model метод restart().
7.	Реализуй в классе Model метод startNextLevel().


Sokoban (11)

Начнем наполнять функционалом класс модели Model. Добавь в него:
11.1. Поле GameObjects gameObjects. Оно будет хранить наши игровые объекты.
11.2. Поле отвечающее за текущий уровень int currentLevel. Проинициализируй его
значением 1.
11.3. Поле отвечающие за загрузчик уровней LevelLoader levelLoader.
Проинициализируй его с помощью файла levels.txt из папки res.
11.4. Метод GameObjects getGameObjects(), он должен возвращать все игровые
объекты.
11.5. Метод restartLevel(int level), он должен получать новые игровые объекты для
указанного уровня у загрузчика уровня levelLoader и сохранять их в поле gameObjects.
11.6. Метод restart(), он должен перезапускать текущий уровень, вызывая restartLevel
с нужным параметром.
11.7. Метод startNextLevel(), он должен увеличивать значение переменной
currentLevel, хранящей номер текущего уровня и выполнять перезапуск нового уровня.



Sokoban (11)

Начнем наполнять функционалом класс модели Model. Добавь в него:
11.1. Поле GameObjects gameObjects. Оно будет хранить наши игровые объекты.
11.2. Поле отвечающее за текущий уровень int currentLevel. Проинициализируй его
значением 1.
11.3. Поле отвечающие за загрузчик уровней LevelLoader levelLoader.
Проинициализируй его с помощью файла levels.txt из папки res.
11.4. Метод GameObjects getGameObjects(), он должен возвращать все игровые
объекты.
11.5. Метод restartLevel(int level), он должен получать новые игровые объекты для
указанного уровня у загрузчика уровня levelLoader и сохранять их в поле gameObjects.
11.6. Метод restart(), он должен перезапускать текущий уровень, вызывая restartLevel
с нужным параметром.
11.7. Метод startNextLevel(), он должен увеличивать значение переменной
currentLevel, хранящей номер текущего уровня и выполнять перезапуск нового уровня.



Sokoban (11)

Начнем наполнять функционалом класс модели Model. Добавь в него:
11.1. Поле GameObjects gameObjects. Оно будет хранить наши игровые объекты.
11.2. Поле отвечающее за текущий уровень int currentLevel. Проинициализируй его
значением 1.
11.3. Поле отвечающие за загрузчик уровней LevelLoader levelLoader.
Проинициализируй его с помощью файла levels.txt из папки res.
11.4. Метод GameObjects getGameObjects(), он должен возвращать все игровые
объекты.
11.5. Метод restartLevel(int level), он должен получать новые игровые объекты для
указанного уровня у загрузчика уровня levelLoader и сохранять их в поле gameObjects.
11.6. Метод restart(), он должен перезапускать текущий уровень, вызывая restartLevel
с нужным параметром.
11.7. Метод startNextLevel(), он должен увеличивать значение переменной
currentLevel, хранящей номер текущего уровня и выполнять перезапуск нового уровня.



Sokoban (11)

Начнем наполнять функционалом класс модели Model. Добавь в него:
11.1. Поле GameObjects gameObjects. Оно будет хранить наши игровые объекты.
11.2. Поле отвечающее за текущий уровень int currentLevel. Проинициализируй его
значением 1.
11.3. Поле отвечающие за загрузчик уровней LevelLoader levelLoader.
Проинициализируй его с помощью файла levels.txt из папки res.
11.4. Метод GameObjects getGameObjects(), он должен возвращать все игровые
объекты.
11.5. Метод restartLevel(int level), он должен получать новые игровые объекты для
указанного уровня у загрузчика уровня levelLoader и сохранять их в поле gameObjects.
11.6. Метод restart(), он должен перезапускать текущий уровень, вызывая restartLevel
с нужным параметром.
11.7. Метод startNextLevel(), он должен увеличивать значение переменной
currentLevel, хранящей номер текущего уровня и выполнять перезапуск нового уровня.



Sokoban (11)

Начнем наполнять функционалом класс модели Model. Добавь в него:
11.1. Поле GameObjects gameObjects. Оно будет хранить наши игровые объекты.
11.2. Поле отвечающее за текущий уровень int currentLevel. Проинициализируй его
значением 1.
11.3. Поле отвечающие за загрузчик уровней LevelLoader levelLoader.
Проинициализируй его с помощью файла levels.txt из папки res.
11.4. Метод GameObjects getGameObjects(), он должен возвращать все игровые
объекты.
11.5. Метод restartLevel(int level), он должен получать новые игровые объекты для
указанного уровня у загрузчика уровня levelLoader и сохранять их в поле gameObjects.
11.6. Метод restart(), он должен перезапускать текущий уровень, вызывая restartLevel
с нужным параметром.
11.7. Метод startNextLevel(), он должен увеличивать значение переменной
currentLevel, хранящей номер текущего уровня и выполнять перезапуск нового уровня.



